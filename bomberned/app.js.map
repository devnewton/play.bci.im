{"version":3,"sources":["app/BombernedApp.ts","app/BombernedGame.ts","app/entities/Arrow.ts","app/entities/Bomb.ts","app/entities/Explosion.ts","app/entities/Player.ts","app/entities/Team.ts","app/ia/CPU.ts","app/states/AbstractState.ts","app/states/GamepadOptions.ts","app/states/GamepadOptionsBindAxisOrButton.ts","app/states/GamepadOptionsLayout.ts","app/states/Help1.ts","app/states/Intro.ts","app/states/KeyboardOptions.ts","app/states/KeyboardOptionsBindKey.ts","app/states/Level.ts","app/states/MouseOptions.ts","app/states/Options.ts","app/states/TeamSelectScreen.ts","app/states/Title.ts","app/ui/Menu.ts","app/ui/MenuButton.ts","app/ui/MenuCursor.ts","app/ui/MenuMiniButton.ts","app/ui/MenuSelect.ts","app/utils/Controls.ts","app/utils/DamageResolver.ts","app/utils/GamepadUtils.ts"],"names":[],"mappings":"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","file":"public/app.js","sourcesContent":["import { BombernedGame } from \"./BombernedGame\";\n\nnew BombernedGame();","/// <reference path=\"../typings/phaser.d.ts\"/>\nimport {Intro} from \"./states/Intro\";\nimport {Help1} from \"./states/Help1\";\nimport {Title} from \"./states/Title\";\nimport {Options} from \"./states/Options\";\nimport {KeyboardOptions} from \"./states/KeyboardOptions\";\nimport {MouseOptions} from \"./states/MouseOptions\";\nimport {KeyboardOptionsBindKey} from \"./states/KeyboardOptionsBindKey\";\nimport {GamepadOptions} from \"./states/GamepadOptions\";\nimport {GamepadOptionsLayout} from \"./states/GamepadOptionsLayout\";\nimport {GamepadOptionsBindAxisOrButton} from \"./states/GamepadOptionsBindAxisOrButton\";\nimport {TeamSelectScreen} from \"./states/TeamSelectScreen\";\nimport {Level} from \"./states/Level\";\nimport {Controllers} from \"./utils/Controls\";\n\nexport class BombernedGame extends Phaser.Game {\n\n    controllers: Controllers;\n\n    constructor() {\n        super(1280, 720, Phaser.CANVAS, 'game', {\n            preload: () => this.preloadGame()\n            , create: () => this.createGame()\n        });\n        this.state.add('Intro', Intro);\n        this.state.add('Title', Title);\n        this.state.add('Help1', Help1);\n        this.state.add('Options', Options);\n        this.state.add('GamepadOptionsLayout', GamepadOptionsLayout);\n        this.state.add('GamepadOptionsBindAxisOrButton', GamepadOptionsBindAxisOrButton);\n        this.state.add('KeyboardOptions', KeyboardOptions);\n        this.state.add('KeyboardOptionsBindKey', KeyboardOptionsBindKey);\n        this.state.add('MouseOptions', MouseOptions);\n        this.state.add('GamepadOptions', GamepadOptions);\n        this.state.add('TeamSelectScreen', TeamSelectScreen);\n        this.state.add('Level', Level);\n    }\n\n    preloadGame() {\n        this.scale.scaleMode = Phaser.ScaleManager.SHOW_ALL;\n        this.scale.fullScreenScaleMode = Phaser.ScaleManager.SHOW_ALL;\n        this.scale.pageAlignHorizontally = true;\n        this.scale.pageAlignVertically = true;\n    }\n\n    createGame() {\n        this.controllers = new Controllers(this);\n        this.state.start(this.device.chrome ? 'Title' : 'Intro');\n    }\n\n    addSpriteAnimation(sprite: Phaser.Sprite, animationName: string, frameCount: number): Phaser.Animation {\n        return sprite.animations.add(animationName, this.genAnimArray(animationName, frameCount));\n    }\n\n    private genAnimArray(name: string, n: number) {\n        let result = new Array<string>();\n        for (let i = 0; i < n; ++i) {\n            result.push(name + i);\n        }\n        return result;\n    }\n\n}","/// <reference path=\"../../typings/phaser.d.ts\"/>\n/// <reference path=\"../../typings/pixi.d.ts\"/>\nimport { BombernedGame } from \"../BombernedGame\";\nimport { Level } from \"../states/Level\";\nimport { Explosion } from \"./Explosion\";\n\nexport class Arrow extends Phaser.Sprite {\n    \n    arrowCharge: ArrowCharge;\n\n    constructor( game: Phaser.Game ) {\n        super( game, 0, 0, 'arrow' );\n        ( <BombernedGame>game ).addSpriteAnimation( this, 'arrow.fly', 4 );\n        this.game.physics.enable( this, Phaser.Physics.ARCADE );\n        this.anchor.setTo( 0.5, 0.5 );\n        this.checkWorldBounds = true;\n        this.outOfBoundsKill = true;\n        this.exists = false;\n        this.health = 0;\n        this.alive = false;\n        ( <Level>this.game.state.getCurrentState() ).arrows.add(this);\n\n        this.arrowCharge = new ArrowCharge( game );\n        this.arrowCharge.x = 11;\n        this.arrowCharge.y = 0;\n        this.addChild( this.arrowCharge );\n    }\n\n    static preload( game: Phaser.Game ) {\n        game.load.atlasXML( 'arrow', 'sprites/devnewton/arrow.png', 'sprites/devnewton/arrow.xml' );\n    }\n\n    fire( fromX: number, fromY: number, angle: number, speed: number ) {\n        this.reset( fromX, fromY, 1 );\n        this.scale.set( 1 );\n        this.game.physics.arcade.velocityFromRotation( angle, speed, this.body.velocity );\n        this.rotation = angle;\n        this.play( 'arrow.fly', 4, true );\n        this.arrowCharge.reset(11, 0, 1);\n        this.arrowCharge.play( 'arrow.charge', 16, true, false );\n    }\n\n}\n\nexport class ArrowExplosion extends Explosion {\n    constructor( game: Phaser.Game ) {\n        super( game, game.world.centerX, game.world.centerY, 'arrow' );\n        ( <BombernedGame>game ).addSpriteAnimation( this, 'arrow.explode', 8 );\n        this.play( 'arrow.explode', 3, false, true );\n        this.anchor.setTo( 0.5, 0.5 );\n        ( <Level>this.game.state.getCurrentState() ).explosions.add( this );\n    }\n\n    kill(): Phaser.Sprite {\n        this.destroy();\n        return super.kill();\n    }\n}\n\nexport class ArrowCharge extends Phaser.Sprite {\n    constructor( game: Phaser.Game ) {\n        super( game, game.world.centerX, game.world.centerY, 'arrow' );\n        ( <BombernedGame>game ).addSpriteAnimation( this, 'arrow.charge', 11 );\n        this.play( 'arrow.charge', 16, true, false );\n        this.anchor.setTo( 0.5, 0.5 );\n    }\n\n    kill(): Phaser.Sprite {\n        let explosion = new ArrowExplosion( this.game );\n        let explosionPos = new Phaser.Point( this.parent.x + 11, this.parent.y );\n        Phaser.Point.rotate( explosionPos, this.parent.x, this.parent.y, this.parent.rotation );\n        explosion.x = explosionPos.x;\n        explosion.y = explosionPos.y;\n        ( <Phaser.Sprite>this.parent ).kill();\n        return super.kill();\n    }\n}","/// <reference path=\"../../typings/phaser.d.ts\"/>\nimport { BombernedGame } from \"../BombernedGame\";\nimport { Level } from \"../states/Level\";\nimport { Explosion } from \"./Explosion\";\n\nconst TIME_BEFORE_EXPLOSION = 5000;\nconst ABOUT_TO_EXPLODE_ANIM_DURATION = 3000;\n\nexport class Bomb extends Phaser.Sprite {\n\n    explosionTime: number;\n    explosionSize = 3;\n\n    constructor( game: Phaser.Game ) {\n        super( game, game.world.centerX, game.world.centerY, 'bomb' );\n        ( <BombernedGame>game ).addSpriteAnimation( this, 'bomb.dropped', 2 );\n        ( <BombernedGame>game ).addSpriteAnimation( this, 'bomb.abouttoexplode', 3 );\n\n        this.explosionTime = game.time.time + TIME_BEFORE_EXPLOSION;\n        this.play( 'bomb.dropped', 4, true );\n        this.anchor.setTo( 0.5, 0.5 );\n        \n        ( <Level>this.game.state.getCurrentState() ).bombs.add(this);\n    }\n\n    static preload( game: Phaser.Game ) {\n        game.load.atlasXML( 'bomb', 'sprites/devnewton/bomb.png', 'sprites/devnewton/bomb.xml' );\n    }\n    \n    damage(amount: number): Phaser.Sprite {\n        if ( this.game.time.time < ( this.explosionTime - ABOUT_TO_EXPLODE_ANIM_DURATION ) ) {\n            this.explosionTime = this.game.time.time + ABOUT_TO_EXPLODE_ANIM_DURATION;\n        }\n        return this;\n    }\n\n    update() {\n        if ( this.game.time.time > ( this.explosionTime - ABOUT_TO_EXPLODE_ANIM_DURATION ) ) {\n            this.play( 'bomb.abouttoexplode', 15, false );\n        }\n        if ( this.game.time.time > this.explosionTime ) {\n            let explosion = new BombExplosion( this.game, 'bomb.explosion.center', 0 );\n            explosion.x = this.x;\n            explosion.y = this.y;\n\n            for ( let i = 1; i <= this.explosionSize; ++i ) {\n                let animation = i === this.explosionSize ? 'bomb.explosion.end' : 'bomb.explosion.side';\n                \n                let explosionTop = new BombExplosion( this.game, animation, 180 );\n                explosionTop.x = this.x;\n                explosionTop.y = this.y - i * 32;\n                \n                let explosionBottom = new BombExplosion( this.game, animation, 0 );\n                explosionBottom.x = this.x;\n                explosionBottom.y = this.y + i * 32;\n                \n                let explosionLeft = new BombExplosion( this.game, animation, 90 );\n                explosionLeft.x = this.x - i * 32;\n                explosionLeft.y = this.y;\n                \n                let explosionRight = new BombExplosion( this.game, animation, -90 );\n                explosionRight.x = this.x + i * 32;\n                explosionRight.y = this.y;\n            }\n            this.destroy();\n        }\n    }\n}\n\nexport class BombExplosion extends Explosion {\n    constructor( game: Phaser.Game, animation: string, angle: number ) {\n        super( game, game.world.centerX, game.world.centerY, 'bomb' );\n        ( <BombernedGame>game ).addSpriteAnimation( this, animation, 8 );\n        this.play( animation, 3, false, true );\n        this.anchor.setTo( 0.5, 0.5 );\n        this.angle = angle;\n        ( <Level>this.game.state.getCurrentState() ).explosions.add(this);\n    }\n    \n    kill(): Phaser.Sprite {\n        this.destroy();\n        return super.kill();\n    }\n}","/// <reference path=\"../../typings/phaser.d.ts\"/>\nexport class Explosion extends Phaser.Sprite {\n\n    kill(): Phaser.Sprite {\n        this.destroy();\n        return super.kill();\n    }\n    \n    damage(amount: number): Phaser.Sprite {\n        return this;\n    }\n}","/// <reference path=\"../../typings/phaser.d.ts\"/>\nimport { BombernedGame } from \"../BombernedGame\";\nimport { AbstractControls } from \"../utils/Controls\";\nimport { Bomb } from \"./Bomb\";\nimport { Arrow } from \"./Arrow\";\n\ninterface PlayerState {\n    update( player: Player );\n}\n\nclass PlayerRunningState implements PlayerState {\n    \n    update( player: Player ) {\n        if ( !player.oldPos.equals( player.position ) ) {\n            player.oldPos = player.position.clone();\n        }\n        if ( player.controls ) {\n            player.body.velocity.x = 0;\n            player.body.velocity.y = 0;\n            \n            let aimingAngle = player.controls.aimingAngle(player.position);\n            if(aimingAngle != null) {\n\t            if( player.controls.isShooting() && !player.arrow.alive && player.game.time.time > player.nextArrowTime ) {\n\t                player.arrow.fire(player.x, player.y, aimingAngle, 500);\n\t                player.nextArrowTime = player.game.time.time + 1000;\n\t            }\n            }\n            \n            if( player.controls.isDroppingBomb() && player.game.time.time > player.nextBombTime) {\n                let bomb = new Bomb(player.game);\n                bomb.x = player.x;\n                bomb.y = player.y;\n                player.nextBombTime = player.game.time.time + 1000;\n            }\n            \n            if ( player.controls.isGoingLeft() ) {\n                player.body.velocity.x = -1;\n            } else if ( player.controls.isGoingRight() ) {\n                player.body.velocity.x = 1;\n            }           \n            if ( player.controls.isGoingUp() ) {\n                player.body.velocity.y = -1;\n            } else if ( player.controls.isGoingDown() ) {\n                player.body.velocity.y = 1;\n            }\n            player.body.velocity = player.body.velocity.setMagnitude(300);\n\n            if ( player.body.velocity.y < 0 ) {\n                player.play( \"player.walk.back\", 8, false );\n            } else if ( player.body.velocity.y > 0 ) {\n                player.play( \"player.walk.front\", 8, false );\n            } else if ( player.body.velocity.x < 0 ) {\n                player.play( \"player.walk.left\", 8, false );\n            } else if ( player.body.velocity.x > 0 ) {\n                player.play( \"player.walk.right\", 8, false );\n            } else {\n                player.play( \"player.wait\", 8, false );\n            }\n        }\n\n    }\n}\n\n\nexport class Player extends Phaser.Sprite {\n\n    controls: AbstractControls;\n    state: PlayerState;\n    cpuData: any = {};\n    arrow: Arrow;\n    nextBombTime = -1;\n    nextArrowTime = -1;\n    static RUNNING_STATE = new PlayerRunningState();\n\n    constructor( game: Phaser.Game, key: string ) {\n        super( game, game.world.centerX, game.world.centerY, key );\n        this.health = 3;\n        ( <BombernedGame>game ).addSpriteAnimation( this, 'player.walk.back', 4 );\n        ( <BombernedGame>game ).addSpriteAnimation( this, 'player.walk.front', 4 );\n        ( <BombernedGame>game ).addSpriteAnimation( this, 'player.walk.left', 4 );\n        ( <BombernedGame>game ).addSpriteAnimation( this, 'player.walk.right', 4 );\n        ( <BombernedGame>game ).addSpriteAnimation( this, 'player.wait', 1 );\n\n        this.play( \"player.wait\", 8, false );\n        this.anchor.setTo( 0.5, 0.5 );\n        this.game.physics.enable( this, Phaser.Physics.ARCADE );\n        this.body.setCircle( 24 );\n        this.body.collideWorldBounds = true;\n        this.game.add.existing( this );\n        this.state = Player.RUNNING_STATE;\n        \n        this.name = key;\n        \n        this.arrow = new Arrow(game);\n        this.arrow.arrowCharge.data.friends = [ this.name ];\n        this.arrow.arrowCharge.name = this.name + '-arrow-charge';\n\n        this.data.friends = [ this.arrow.arrowCharge.name ];\n    }\n\n    static preload( game: Phaser.Game ) {\n        game.load.atlasXML( 'ned', 'sprites/devnewton/ned.png', 'sprites/devnewton/player.xml' );\n        game.load.atlasXML( 'ned2', 'sprites/devnewton/ned2.png', 'sprites/devnewton/player.xml' );\n        game.load.atlasXML( 'moustaki', 'sprites/devnewton/moustaki.png', 'sprites/devnewton/player.xml' );\n        game.load.atlasXML( 'moustaki2', 'sprites/devnewton/moustaki2.png', 'sprites/devnewton/player.xml' );\n    }\n\n    oldPos = new Phaser.Point( 0, 0 );\n\n    update() {\n        super.update()\n        this.state.update( this );\n    }\n    \n    invincible = false;\n\n    damage(amount: number): Phaser.Sprite {\n        if (!this.invincible) {\n            this.invincible = true;\n            this.game.add.tween(this).from({ tint: 0xFF0000 }).to({ tint: 0xFFFFFF }, 1000, Phaser.Easing.Linear.None, true, 0, 4, false).onComplete.add(() => this.invincible = false);\n            super.damage(amount);\n        }\n        return this;\n    }\n    \n    \n    kill(): Phaser.Sprite {\n        let ghost = new Ghost(this.game, this.key as string);\n        ghost.x = this.x;\n        ghost.y = this.y;\n        \n        let goToHeavenTween = this.game.add.tween(ghost);\n        goToHeavenTween.to({y: -100}, 5000, \"Linear\", true);\n        \n        let swirlTween = this.game.add.tween(ghost);\n        swirlTween.to({x: \"-50\"}, 1000, \"Linear\", true, 0, -1, true);\n        \n        this.game.state.getCurrentState().add.existing(ghost);\n        \n        this.destroy();\n        return this;\n    }\n\n}\n\nclass Ghost extends Phaser.Sprite{\n    constructor( game: Phaser.Game, key: string ) {\n        super( game, game.world.centerX, game.world.centerY, key );\n        this.outOfBoundsKill = true;\n        ( <BombernedGame>game ).addSpriteAnimation( this, 'player.ghost', 1 );\n        this.play( \"player.ghost\", 1, false );\n        this.anchor.setTo( 0.5, 0.5 );\n    }\n}","/// <reference path=\"../../typings/phaser.d.ts\"/>\nimport { Player } from \"./Player\";\n\nexport class Team extends Phaser.Group {\n    constructor(game: Phaser.Game) {\n        super(game);\n    }\n}","/// <reference path=\"../../typings/phaser.d.ts\"/>\r\nimport { CPUControls } from \"../utils/Controls\";\r\nimport { Player } from \"../entities/Player\";\r\n\r\nexport class CPU {\r\n    controls: CPUControls;\r\n    me: Player;\r\n    opponents: Phaser.Group;\r\n    buddies: Phaser.Group;\r\n    waitUntil: number;\r\n    destination: Phaser.Point;\r\n\r\n    think() {\r\n        this.controls.reset();\r\n        if(this.me.alive) {\r\n            if(!this.destination) {\r\n                this.destination = this.findSafePos();\r\n            }else if(Phaser.Point.distance(this.me.position, this.destination) < 32 ){\r\n                this.destination = null;\r\n            } else {\r\n                this.moveToXY(this.destination.x, this.destination.y);\r\n            }\r\n            this.tryToShootArrow();\r\n            this.tryToDropBomb();\r\n        }\r\n    }\r\n    \r\n    tryToShootArrow() {\r\n        let opponent = this.opponents.getFirstAlive();\r\n        if(opponent) {\r\n            this.controls.aimAngle = Phaser.Math.angleBetweenPoints(this.me.position, opponent.position);\r\n            this.controls.shooting = !this.me.arrow.alive;\r\n        }\r\n    }\r\n    \r\n    tryToDropBomb() {\r\n        if(!this.controls.shooting) {\r\n            this.controls.droppingBomb = this.me.game.rnd.integerInRange(0, 100) < 20;\r\n        }\r\n    }\r\n    \r\n    findSafePos() : Phaser.Point {\r\n        let worldBounds = this.me.game.physics.arcade.bounds;\r\n        let x = this.me.game.rnd.between(worldBounds.left, worldBounds.right);\r\n        let y = this.me.game.rnd.between(worldBounds.top, worldBounds.bottom);\r\n        return new Phaser.Point(x, y);\r\n    }\r\n\r\n    moveToXY(x: number, y: number) {\r\n        if (this.me.body.x < x) {\r\n            this.controls.goingRight = true;\r\n        } else if (this.me.body.x > x) {\r\n            this.controls.goingLeft = true;\r\n        }\r\n        if (this.me.body.y < y) {\r\n            this.controls.goingDown = true;\r\n        } else if (this.me.body.y > y) {\r\n            this.controls.goingUp = true;\r\n        }\r\n    }\r\n}","/// <reference path=\"../../typings/phaser.d.ts\"/>\nexport abstract class AbstractState extends Phaser.State {\n\n    constructor() {\n        super();\n    }\n\n    create() {\n        this.game.input.keyboard.addKey(Phaser.Keyboard.F11).onDown.add(() => this.toggleFullscreen());\n    }\n\n    toggleFullscreen() {\n        if (this.game.scale.isFullScreen) {\n            this.game.scale.stopFullScreen();\n        } else {\n            this.game.scale.startFullScreen();\n        }\n    }\n}\n","/// <reference path=\"../../typings/phaser.d.ts\"/>\nimport {AbstractState} from \"./AbstractState\";\nimport {Menu} from \"../ui/Menu\";\nimport {MenuButton} from \"../ui/MenuButton\";\nimport {GamepadUtils} from \"../utils/GamepadUtils\";\n\n\nexport class GamepadOptions extends AbstractState {\n\n    constructor() {\n        super();\n    }\n\n    preload() {\n        Menu.preload(this.game);\n    }\n\n    create() {\n        super.create();\n        let title = this.game.add.text(this.game.world.centerX, 0, 'Choose gamepad', { font: \"42px monospace\", fill: 'white' });\n        title.scale.x = 2;\n        title.scale.y = 2;\n        title.anchor.setTo(0.5, 0);\n\n        let subtitle = this.game.add.text(0, 0, 'Move stick or press button to show gamepad number', { font: \"32px monospace\", fill: 'white' });\n        subtitle.y = this.game.world.height - subtitle.height;\n\n        const menu = new Menu(this.game).disableGamepadCursor();\n        menu.addButton(new GamepadMenuButton(this.input.gamepad.pad1, \"Gamepad 1\", 200, 100, () => {\n            this.game.state.start('GamepadOptionsLayout', true, false, 1);\n        }));\n        menu.addButton(new GamepadMenuButton(this.input.gamepad.pad2, \"Gamepad 2\", 200, 200, () => {\n            this.game.state.start('GamepadOptionsLayout', true, false, 2);\n        }));\n        menu.addButton(new GamepadMenuButton(this.input.gamepad.pad3, \"Gamepad 3\", 200, 300, () => {\n            this.game.state.start('GamepadOptionsLayout', true, false, 3);\n        }));\n        menu.addButton(new GamepadMenuButton(this.input.gamepad.pad4, \"Gamepad 4\", 200, 400, () => {\n            this.game.state.start('GamepadOptionsLayout', true, false, 4);\n        }));\n        menu.button(\"Back\", 200, 550, () => this.game.state.start('Options'));\n    }\n}\n\nclass GamepadMenuButton extends MenuButton {\n    pad: Phaser.SinglePad;\n    constructor(pad: Phaser.SinglePad, label: string, x: number, y: number, callback: Function) {\n        super(pad.game, label, x, y, callback);\n        this.pad = pad;\n    }\n\n    update() {\n        super.update();\n\n        if (this.isPadActive()) {\n            this.labelText.tint = GamepadUtils.gamepadColor(this.pad);\n        } else {\n            this.labelText.tint = 0xFFFFFF;\n        }\n    }\n\n    isPadActive(): boolean {\n        for (let b = 0; b < 16; ++b) {\n            let button = this.pad.getButton(b);\n            if (button && button.isDown) {\n                return true;\n            }\n        }\n        for (let a = 0; a < 16; ++a) {\n            if (Math.abs(this.pad.axis(a)) > this.pad.deadZone) {\n                return true;\n            }\n        }\n        return false;\n    }\n\n}\n","/// <reference path=\"../../typings/phaser.d.ts\"/>\nimport { AbstractState } from \"./AbstractState\";\nimport { Menu } from \"../ui/Menu\";\nimport { MenuMiniButton } from \"../ui/MenuMiniButton\";\nimport { BombernedGame } from \"../BombernedGame\";\nimport { GamepadUtils } from \"../utils/GamepadUtils\";\n\nexport class GamepadOptionsBindAxisOrButton extends AbstractState {\n\n    bindingsDescription = [\n        { label: 'Pull move X axis', localStorageKey: 'moveXAxis' },\n        { label: 'Pull move Y axis', localStorageKey: 'moveYAxis' },\n        { label: 'Press drop bomb button', localStorageKey: 'droppingBombButton' },\n        { label: 'Pull aim X axis', localStorageKey: 'aimXAxis' },\n        { label: 'Pull aim Y axis', localStorageKey: 'aimYAxis' },\n        { label: 'Press shoot button', localStorageKey: 'shootButton' },\n        { label: 'Press menu button', localStorageKey: 'menuButton' }\n    ];\n\n    currentBinding: number = 0;\n    pad: Phaser.SinglePad;\n    padIndex = 1;\n    axisButtons: Phaser.Group;\n    buttonsButtons: Phaser.Group;\n    bindings = {};\n\n    constructor() {\n        super();\n    }\n\n    preload() {\n        Menu.preload(this.game);\n        MenuMiniButton.preload(this.game);\n    }\n\n    init(padIndex: number, binding: number = 0, bindings: any) {\n        this.bindings = bindings || {};\n        this.pad = GamepadUtils.gamepadByIndex(this.game, padIndex);\n        if (binding >= this.bindingsDescription.length) {\n            this.currentBinding = 0;\n            localStorage.setItem('bomberned.gamepad.' + GamepadUtils.gamepadId(this.pad) + '.layout', JSON.stringify(this.bindings));\n            (this.game as BombernedGame).controllers.updatePadLayout();\n            this.game.state.start('GamepadOptions');\n        } else {\n            this.currentBinding = binding;\n        }\n    }\n\n    create() {\n        super.create();\n        let logo = this.game.add.text(this.game.world.centerX, 0, this.bindingsDescription[this.currentBinding].label, { font: \"42px monospace\", fill: 'white' });\n        logo.scale.x = 2;\n        logo.scale.y = 2;\n        logo.anchor.setTo(0.5, 0);\n        const menu = new Menu(this.game).disableGamepadCursor();\n        menu.button(\"Back\", 200, 600, () => this.game.state.start('GamepadOptions'));\n        this.createAxisButtons();\n        this.createButtonsButtons();\n\n    }\n\n    createAxisButtons() {\n        this.axisButtons = this.game.add.group();\n        this.axisButtons.visible = false;\n        const nbButtonsPerColumn = Math.ceil(Math.sqrt(GamepadUtils.NB_AXIS));\n        for (let y = 0, axisCode =0; axisCode< GamepadUtils.NB_AXIS; ++y) {\n            for (let x = 0; x < nbButtonsPerColumn; ++x) {\n                const buttonAxisCode = axisCode++;\n                let miniButton = new AxisButton(this.game, this.pad, buttonAxisCode, 250 + x * 200, 100 + y * 120, () => this.bindAxis(buttonAxisCode));\n                this.axisButtons.add(miniButton);\n            }\n        }\n    }\n\n    createButtonsButtons() {\n        this.buttonsButtons = this.game.add.group();\n        this.buttonsButtons.visible = false;\n        const nbButtonsPerColumn = Math.ceil(Math.sqrt(GamepadUtils.NB_BUTTONS));\n        for (let y = 0, buttonCode =0; buttonCode< GamepadUtils.NB_BUTTONS; ++y) {\n            for (let x = 0; x < nbButtonsPerColumn; ++x) {\n                const buttonButtonCode = buttonCode++;\n                let miniButton = new ButtonButton(this.game, this.pad, buttonButtonCode, 250 + x * 200, 100 + y * 120, () => this.bindButton(buttonButtonCode));\n                this.buttonsButtons.add(miniButton);\n            }\n        }\n    }\n\n    update() {\n        super.update();\n        if (this.bindingsDescription[this.currentBinding].localStorageKey.match(/axis/gi)) {\n            this.axisButtons.visible = true;\n            this.buttonsButtons.visible = false;\n        } else {\n            this.axisButtons.visible = false;\n            this.buttonsButtons.visible = true;\n        }\n    }\n\n    bindAxis(axisCode: number) {\n        this.bindings[this.bindingsDescription[this.currentBinding].localStorageKey] = axisCode;\n        this.game.state.start('GamepadOptionsBindAxisOrButton', true, false, this.padIndex, this.currentBinding + 1, this.bindings);\n    }\n\n    bindButton(buttonCode: number) {\n        this.bindings[this.bindingsDescription[this.currentBinding].localStorageKey] = buttonCode;\n        this.game.state.start('GamepadOptionsBindAxisOrButton', true, false, this.padIndex, this.currentBinding + 1, this.bindings);\n    }\n}\n\nclass AxisButton extends MenuMiniButton {\n    pad: Phaser.SinglePad;\n    axisCode: number;\n    constructor(game: Phaser.Game, pad: Phaser.SinglePad, axisCode: number, x: number, y: number, callback: Function) {\n        super(game, axisCode.toString(), x, y, callback);\n        this.pad = pad;\n        this.axisCode = axisCode;\n    }\n    update() {\n        super.update();\n\n        if (Math.abs(this.pad.axis(this.axisCode)) > this.pad.deadZone) {\n            this.labelText.tint = GamepadUtils.gamepadColor(this.pad);\n        } else {\n            this.labelText.tint = 0xFFFFFF;\n        }\n    }\n\n}\n\nclass ButtonButton extends MenuMiniButton {\n    pad: Phaser.SinglePad;\n    buttonCode: number;\n    constructor(game: Phaser.Game, pad: Phaser.SinglePad, buttonCode: number, x: number, y: number, callback: Function) {\n        super(game, buttonCode.toString(), x, y, callback);\n        this.pad = pad;\n        this.buttonCode = buttonCode;\n    }\n    update() {\n        super.update();\n\n        if (this.pad.isDown(this.buttonCode)) {\n            this.labelText.tint = GamepadUtils.gamepadColor(this.pad);\n        } else {\n            this.labelText.tint = 0xFFFFFF;\n        }\n    }\n\n}","/// <reference path=\"../../typings/phaser.d.ts\"/>\nimport {AbstractState} from \"./AbstractState\";\nimport {Menu} from \"../ui/Menu\";\nimport {BombernedGame} from \"../BombernedGame\";\nimport {GamepadUtils} from '../utils/GamepadUtils';\n\nexport class GamepadOptionsLayout extends AbstractState {\n    padIndex: number;\n\n    constructor() {\n        super();\n    }\n\n    preload() {\n        Menu.preload(this.game);\n    }\n\n    init(padIndex : number) {\n        this.padIndex = padIndex || 1;\n    }\n\n    create() {\n        super.create();\n        let title = this.game.add.text(this.game.world.centerX, 0, 'Choose gamepad layout', { font: \"42px monospace\", fill: 'white' });\n        title.scale.x = 2;\n        title.scale.y = 2;\n        title.anchor.setTo(0.5, 0);\n\n        const menu = new Menu(this.game).disableGamepadCursor();\n        menu.button(\"Xbox\", 200, 200, () => {\n            localStorage.setItem('bomberned.gamepad.' + GamepadUtils.gamepadId(GamepadUtils.gamepadByIndex(this.game, this.padIndex)) + '.layout', 'xbox');\n            this.game.state.start('Options');\n        });\n        menu.button(\"Custom\", 200, 300, () => {\n            this.game.state.start('GamepadOptionsBindAxisOrButton', true, false, this.padIndex);\n        });\n        menu.button(\"Back\", 200, 500, () => this.game.state.start('Options'));\n    }\n}","/// <reference path=\"../../typings/phaser.d.ts\"/>\nimport {AbstractState} from \"./AbstractState\";\nimport {Menu} from \"../ui/Menu\";\n\nexport class Help1 extends AbstractState {\n\n    constructor() {\n        super();\n    }\n\n    preload() {\n        this.game.load.image('help1', 'help/help1.png');\n        Menu.preload(this.game);\n    }\n\n    create() {\n        super.create();\n        this.game.add.image(0, 0, 'help1');\n        const menu = new Menu(this.game);\n        menu.button(\"Continue\", 200, 610, () => this.game.state.start('Title'));\n    }\n}\n","/// <reference path=\"../../typings/phaser.d.ts\"/>\nimport { AbstractState } from \"./AbstractState\"; // you import only AClass\n\nexport class Intro extends AbstractState {\n\n    lastKey: Phaser.Key;\n    video: Phaser.Video;\n\n    constructor() {\n        super();\n    }\n\n    preload() {\n        this.game.load.video('intro', 'intro/intro.webm');\n    }\n\n    create() {\n        super.create();\n        this.video = this.game.add.video('intro');\n        this.video.play();\n        this.video.addToWorld(this.game.world.centerX, this.game.world.centerY, 0.5, 0.5);\n        this.video.onComplete.add(() => this.game.state.start('Title'));\n        this.lastKey = this.game.input.keyboard.lastKey;\n        this.game.input.onTap.add(() => {\n            this.gotoTitle();\n        });\n    }\n\n    update() {\n        if (this.lastKey != this.game.input.keyboard.lastKey) {\n            this.gotoTitle();\n            return;\n        }\n        for (let b = 0; b < 16; ++b) {\n            if (this.input.gamepad.isDown(b)) {\n                this.gotoTitle();\n                return;\n            }\n        }\n    }\n\n    gotoTitle() {\n        this.video.stop();\n        this.game.state.start('Title');\n    }\n}\n","/// <reference path=\"../../typings/phaser.d.ts\"/>\nimport {AbstractState} from \"./AbstractState\";\nimport {Menu} from \"../ui/Menu\";\nimport { BombernedGame } from \"../BombernedGame\";\n\nexport class KeyboardOptions extends AbstractState {\n\n    constructor() {\n        super();\n    }\n\n    preload() {\n        Menu.preload(this.game);\n    }\n\n    create() {\n        super.create();\n        let logo = this.game.add.text(this.game.world.centerX, 0, 'Choose keyboard layout',{font: \"42px monospace\", fill: 'white'});\n        logo.scale.x = 2;\n        logo.scale.y = 2;\n        logo.anchor.setTo(0.5, 0);\n\n        const menu = new Menu(this.game).disableKeyboardCursor();\n        menu.button(\"Azerty zsqd\", 200, 100, () => {\n            localStorage.setItem('bomberned.keyboard.layout', 'azerty');\n            (this.game as BombernedGame).controllers.getKeyboardAndMouse().setupKeyboardLayout();\n            this.game.state.start('MouseOptions');\n        });\n        menu.button(\"Qwerty wsad\", 200, 200, () => {\n            localStorage.setItem('bomberned.keyboard.layout', 'qwerty');\n            (this.game as BombernedGame).controllers.getKeyboardAndMouse().setupKeyboardLayout();\n            this.game.state.start('MouseOptions');\n        });\n        menu.button(\"⬆⬇⬅➡\", 200, 300, () => {\n            localStorage.setItem('bomberned.keyboard.layout', 'other');\n            (this.game as BombernedGame).controllers.getKeyboardAndMouse().setupKeyboardLayout();\n            this.game.state.start('MouseOptions');\n        });\n        menu.button(\"Custom\", 200, 400, () => {\n            this.game.state.start('KeyboardOptionsBindKey', true, false);\n        });\n        menu.button(\"Back\", 200, 600, () => this.game.state.start('Options'));\n    }\n}\n","/// <reference path=\"../../typings/phaser.d.ts\"/>\nimport { AbstractState } from \"./AbstractState\";\nimport { Menu } from \"../ui/Menu\";\nimport { BombernedGame } from \"../BombernedGame\";\n\n\nexport class KeyboardOptionsBindKey extends AbstractState {\n\n    bindingsDescription = [\n        { label: 'Press move up key', localStorageKey: 'moveUp' },\n        { label: 'Press move down key', localStorageKey: 'moveDown' },\n        { label: 'Press move left key', localStorageKey: 'moveLeft' },\n        { label: 'Press move right key', localStorageKey: 'moveRight' },\n        { label: 'Press menu key', localStorageKey: 'menu' }\n    ];\n\n    currentBinding: number = 0;\n    bindings = {};\n\n    constructor() {\n        super();\n    }\n\n    preload() {\n        Menu.preload(this.game);\n    }\n\n    init(binding: number = 0, bindings?: any) {\n        this.bindings = bindings || {};\n        if (binding >= this.bindingsDescription.length) {\n            this.currentBinding = 0;\n            localStorage.setItem('bomberned.keyboard.layout', JSON.stringify(this.bindings));\n            (this.game as BombernedGame).controllers.getKeyboardAndMouse().setupKeyboardLayout();\n            this.game.state.start('MouseOptions');\n        } else {\n            this.currentBinding = binding;\n        }\n    }\n\n    create() {\n        super.create();\n        let logo = this.game.add.text(this.game.world.centerX, 0, this.bindingsDescription[this.currentBinding].label, { font: \"42px monospace\", fill: 'white' });\n        logo.scale.x = 2;\n        logo.scale.y = 2;\n        logo.anchor.setTo(0.5, 0);\n        const menu = new Menu(this.game).disableKeyboardCursor();\n        menu.button(\"Back\", 200, 600, () => this.game.state.start('KeyboardOptions'));\n    }\n\n    update() {\n        for (var k in Phaser.KeyCode) {\n            let keycode = Phaser.KeyCode[k];\n            if (this.input.keyboard.isDown(keycode)) {\n                this.bindings[this.bindingsDescription[this.currentBinding].localStorageKey] = keycode;\n                this.game.state.start('KeyboardOptionsBindKey', true, false, this.currentBinding + 1, this.bindings);\n                break;\n            }\n        }\n    }\n}\n","/// <reference path=\"../../typings/phaser.d.ts\"/>\nimport { AbstractState } from \"./AbstractState\";\nimport { BombernedGame } from \"../BombernedGame\";\nimport { Player } from \"../entities/Player\";\nimport { Bomb } from \"../entities/Bomb\";\nimport { Arrow } from \"../entities/Arrow\";\n\nimport { Team } from \"../entities/Team\";\nimport { Menu } from \"../ui/Menu\";\n\nimport { ControllerType, CPUControls } from \"../utils/Controls\";\nimport { DamageResolver } from \"../utils/DamageResolver\";\nimport { CPU } from \"../ia/CPU\";\n\nexport class LevelConfig {\n    nedController: ControllerType;\n    ned2Controller: ControllerType;\n    moustakiController: ControllerType;\n    moustaki2Controller: ControllerType;\n}\n\nexport class Level extends AbstractState {\n\n    config: LevelConfig;\n    collisionSprites: Phaser.Group;\n    damageResolver : DamageResolver;\n    bombs: Phaser.Group;\n    arrows: Phaser.Group;\n    explosions: Phaser.Group;\n    nedsTeam: Team;\n    moustakisTeam: Team;\n    menu: Menu;\n    cpus: Array<CPU>;\n    isNotFirstFrame: boolean;\n    victory: boolean;\n\n    constructor() {\n        super();\n    }\n\n    preload() {\n        Player.preload( this.game );\n        Arrow.preload( this.game );\n        Bomb.preload( this.game );\n        Menu.preload( this.game );\n        this.game.load.image( 'neds-win', 'victory/neds-win.png' );\n        this.game.load.image( 'moustakis-win', 'victory/moustakis-win.png' );\n        this.game.load.tilemap( 'map', 'levels/level1.json', null, Phaser.Tilemap.TILED_JSON );\n        this.game.load.image( 'dojo', 'levels/dojo.png' );\n        this.game.load.audio( 'level-music', 'musics/opengameart/8-bit-music-pack-loopable/bgm_action_4.mp3' )\n        this.game.load.audio( 'victory-music', 'musics/opengameart/hungry-dino-9-chiptune-tracks-10-sfx/victory.mp3' )\n    }\n\n    init( config: LevelConfig ) {\n        this.config = config;\n        this.cpus = [];\n        this.isNotFirstFrame = false;\n        this.victory = false;\n    }\n\n    create() {\n        super.create();\n        this.game.sound.stopAll();\n        this.game.sound.play( 'level-music', 1, true );\n\n        this.game.physics.startSystem( Phaser.Physics.ARCADE );\n        const map = this.game.add.tilemap( 'map' );\n        map.addTilesetImage( 'dojo' );\n\n        const layer = map.createLayer( 'ground' );\n        map.createLayer( 'wall' );\n        layer.resizeWorld();\n        \n        this.damageResolver = new DamageResolver(this.game);\n\n        this.collisionSprites = this.game.add.physicsGroup( Phaser.Physics.ARCADE );\n        for ( let o of map.objects['collision'] ) {\n            if ( o.name === 'world-bounds' ) {\n                this.game.physics.arcade.setBounds( o.x, o.y, o.width, o.height );\n            } else if ( o.rectangle ) {\n                const sprite = this.game.add.sprite( o.x, o.y );\n                this.game.physics.enable( sprite, Phaser.Physics.ARCADE );\n                sprite.body.immovable = true;\n                sprite.width = o.width;\n                sprite.height = o.height;\n                this.collisionSprites.add( sprite );\n            }\n        }\n        \n        this.bombs = new Phaser.Group( this.game );\n        this.arrows = new Phaser.Group( this.game );\n        this.explosions = new Phaser.Group( this.game );\n\n        let controllers = ( this.game as BombernedGame ).controllers;\n\n        this.nedsTeam = new Team( this.game );\n        let nedControls = controllers.getController( this.config.nedController );\n        if ( nedControls ) {\n            let ned = new Player( this.game, 'ned' );\n            ned.x = 256;\n            ned.y = 320;\n            ned.controls = nedControls\n            this.nedsTeam.add( ned );\n        }\n\n        let ned2Controls = controllers.getController( this.config.ned2Controller );\n        if ( ned2Controls ) {\n            let ned2 = new Player( this.game, 'ned2' );\n            ned2.x = 256;\n            ned2.y = 480;\n            ned2.controls = ned2Controls;\n            this.nedsTeam.add( ned2 );\n        }\n\n        this.moustakisTeam = new Team( this.game );\n        let moustakiControls = controllers.getController( this.config.moustakiController );\n        if ( moustakiControls ) {\n            let moustaki = new Player( this.game, 'moustaki' );\n            moustaki.x = 1024;\n            moustaki.y = 320;\n            moustaki.controls = moustakiControls;\n            this.moustakisTeam.add( moustaki );\n        }\n\n        let moustaki2Controls = controllers.getController( this.config.moustaki2Controller );\n        if ( moustaki2Controls ) {\n            let moustaki2 = new Player( this.game, 'moustaki2' );\n            moustaki2.x = 1024;\n            moustaki2.y = 480;\n            moustaki2.controls = moustaki2Controls;\n            this.moustakisTeam.add( moustaki2 );\n        }\n\n        this.nedsTeam.forEachAlive(( player ) => {\n            if ( player.controls instanceof CPUControls ) {\n                let cpu = new CPU();\n                cpu.me = player;\n                cpu.buddies = this.nedsTeam;\n                cpu.opponents = this.moustakisTeam;\n                cpu.controls = player.controls;\n                this.cpus.push( cpu );\n            }\n        }, null );\n        this.moustakisTeam.forEachAlive(( player ) => {\n            if ( player.controls instanceof CPUControls ) {\n                let cpu = new CPU();\n                cpu.me = player;\n                cpu.buddies = this.moustakisTeam;\n                cpu.opponents = this.nedsTeam;\n                cpu.controls = player.controls;\n                this.cpus.push( cpu );\n            }\n        }, null );\n\n        this.menu = new Menu( this.game );\n        this.menu.alive = false;\n        this.menu.visible = false;\n        this.menu.button( \"Continue\", 200, 260, () => {\n            if ( this.victory ) {\n                this.game.state.restart( true, false, this.config );\n            } else {\n                this.menu.alive = false;\n                this.menu.visible = false;\n            }\n        } );\n        this.menu.button( \"Change teams\", 200, 410, () => this.game.state.start( 'TeamSelectScreen', true, false ) );\n        this.menu.button( \"Return to title\", 200, 560, () => this.game.state.start( 'Title', true, false ) );\n    }\n\n    update() {\n        if ( this.isNotFirstFrame ) {\n            if ( !this.checkVictory() ) {\n                this.damageResolver.arrowsVersusGroup(this.arrows, this.bombs);\n                this.damageResolver.arrowsVersusGroup(this.arrows, this.nedsTeam);\n                this.damageResolver.arrowsVersusGroup(this.arrows, this.moustakisTeam);\n                this.damageResolver.groupVersusGroup(this.explosions, this.nedsTeam);\n                this.damageResolver.groupVersusGroup(this.explosions, this.moustakisTeam);\n                this.game.physics.arcade.collide( this.nedsTeam, this.collisionSprites );\n                this.game.physics.arcade.collide( this.moustakisTeam, this.collisionSprites );\n                this.cpus.forEach( c => c.think() );\n            }\n            this.checkMenu();\n        } else {\n            this.isNotFirstFrame = true;\n        }\n\n    }\n\n    checkMenu(): boolean {\n        if ( this.menu.alive ) {\n            return true;\n        }\n        const controllers = ( this.game as BombernedGame ).controllers;\n        let isMenuAsked = controllers.getKeyboardAndMouse().isMenuAsked();\n        this.nedsTeam.forEachAlive(( player ) => {\n            isMenuAsked = isMenuAsked || player.controls.isMenuAsked();\n        }, null );\n        this.moustakisTeam.forEachAlive(( player ) => {\n            isMenuAsked = isMenuAsked || player.controls.isMenuAsked();\n        }, null );\n        if ( isMenuAsked ) {\n            this.showMenu();\n        }\n    }\n\n    checkVictory(): boolean {\n        if ( !this.victory ) {\n            const nedsTeamWin = this.moustakisTeam.countLiving() === 0;\n            const moustakisTeamWin = this.nedsTeam.countLiving() === 0;\n            this.victory = nedsTeamWin || moustakisTeamWin;\n            if ( this.victory ) {\n                this.game.sound.stopAll();\n                this.game.sound.play( 'victory-music', 1, false );\n                //TODO\n                /*this.nedsTeam.forEachAlive(( player ) => {\n                    player.kill();\n                }, null );\n                this.moustakisTeam.forEachAlive(( player ) => {\n                    player.kill();\n                }, null );*/\n                let victoryText = this.game.add.sprite( this.game.world.centerX, 100, nedsTeamWin && moustakisTeamWin && 'draw' || nedsTeamWin && 'neds-win' || 'moustakis-win' );\n                var tween = this.game.add.tween( victoryText.scale ).to( { x: 1.4, y: 1.4 }, 1000, \"Linear\", true, 0, -1 );\n                tween.yoyo( true );\n                victoryText.anchor.setTo( 0.5, 0 );\n                this.showMenu();\n            }\n        }\n        return this.victory;\n    }\n\n    showMenu() {\n        this.menu.alive = true;\n        this.menu.visible = true;\n    }\n\n    render() {\n    }\n}\n","/// <reference path=\"../../typings/phaser.d.ts\"/>\nimport {AbstractState} from \"./AbstractState\";\nimport {Menu} from \"../ui/Menu\";\nimport { BombernedGame } from \"../BombernedGame\";\n\nexport class MouseOptions extends AbstractState {\n\n    constructor() {\n        super();\n    }\n\n    preload() {\n        Menu.preload(this.game);\n    }\n\n    create() {\n        super.create();\n        let logo = this.game.add.text(this.game.world.centerX, 0, 'Choose mouse layout',{font: \"42px monospace\", fill: 'white'});\n        logo.scale.x = 2;\n        logo.scale.y = 2;\n        logo.anchor.setTo(0.5, 0);\n\n        const menu = new Menu(this.game).disableKeyboardCursor();\n        menu.button(\"Bomb LB, shoot RB\", 200, 100, () => {\n            localStorage.setItem('bomberned.mouse.bomb', 'LB');\n            localStorage.setItem('bomberned.mouse.shoot', 'RB');\n            (this.game as BombernedGame).controllers.getKeyboardAndMouse().setupMouseLayout();\n            this.game.state.start('Options');\n        });\n        menu.button(\"Bomb RB, shoot LB\", 200, 200, () => {\n            localStorage.setItem('bomberned.mouse.bomb', 'RB');\n            localStorage.setItem('bomberned.mouse.shoot', 'LB');\n            (this.game as BombernedGame).controllers.getKeyboardAndMouse().setupMouseLayout();\n            this.game.state.start('Options');\n        });\n        menu.button(\"Back\", 200, 600, () => this.game.state.start('Options'));\n    }\n}\n","/// <reference path=\"../../typings/phaser.d.ts\"/>\nimport {AbstractState} from \"./AbstractState\";\nimport {Menu} from \"../ui/Menu\";\n\nexport class Options extends AbstractState {\n\n    constructor() {\n        super();\n    }\n\n    preload() {\n        Menu.preload(this.game);\n    }\n\n    create() {\n        super.create();\n        let logo = this.game.add.text(this.game.world.centerX, 0, 'Options', { font: \"100px monospace\", fill: 'white' });\n        logo.scale.x = 2;\n        logo.scale.y = 2;\n        logo.anchor.setTo(0.5, 0);\n\n        let y = 100;\n        const menu = new Menu(this.game);\n        menu.button(\"Keyboard & mouse\", 200, y += 150, () => this.game.state.start('KeyboardOptions'));\n        if (this.input.gamepad.supported) {\n            menu.button(\"Gamepad\", 200, y += 150, () => this.game.state.start('GamepadOptions'));\n        }\n        menu.button(\"Back\", 200, y += 150, () => this.game.state.start('Title'));\n    }\n}\n","/// <reference path=\"../../typings/phaser.d.ts\"/>\nimport { AbstractState } from \"./AbstractState\";\nimport { LevelConfig } from \"./Level\";\nimport { Menu } from \"../ui/Menu\";\nimport { MenuSelect, MenuSelectOption } from \"../ui/MenuSelect\";\nimport { BombernedGame } from \"../BombernedGame\";\nimport { ControllerType } from \"../utils/Controls\";\n\nexport class TeamSelectScreen extends AbstractState {\n\n    nedSelect: MenuSelect<ControllerType>;\n    ned2Select: MenuSelect<ControllerType>;\n    moustakiSelect: MenuSelect<ControllerType>;\n    moustaki2Select: MenuSelect<ControllerType>;\n\n    constructor() {\n        super();\n    }\n\n    preload() {\n        Menu.preload( this.game );\n        this.game.load.atlasXML( 'ned', 'sprites/devnewton/ned.png', 'sprites/devnewton/player.xml' );\n        this.game.load.atlasXML( 'ned2', 'sprites/devnewton/ned2.png', 'sprites/devnewton/player.xml' );\n        this.game.load.atlasXML( 'moustaki', 'sprites/devnewton/moustaki.png', 'sprites/devnewton/player.xml' );\n        this.game.load.atlasXML( 'moustaki2', 'sprites/devnewton/moustaki2.png', 'sprites/devnewton/player.xml' );\n\n    }\n\n    create() {\n        super.create();\n        let logo = this.game.add.text( this.game.world.centerX, 0, 'Team selection', { font: \"64px monospace\", fill: 'white' } );\n        logo.scale.x = 2;\n        logo.scale.y = 2;\n        logo.anchor.setTo( 0.5, 0 );\n\n        let ned = this.add.sprite( 150, 175, 'ned', 0 );\n        ( <BombernedGame>this.game ).addSpriteAnimation( ned, 'player.wait', 1 );\n        ned.play( 'player.wait', 8, true );\n\n        let ned2 = this.add.sprite( 150, 275, 'ned2', 0 );\n        ( <BombernedGame>this.game ).addSpriteAnimation( ned2, 'player.wait', 1 );\n        ned2.play( 'player.wait', 8, true );\n\n        let moustaki = this.add.sprite( 1060, 375, 'moustaki', 0 );\n        ( <BombernedGame>this.game ).addSpriteAnimation( moustaki, 'player.wait', 1 );\n        moustaki.play( 'player.wait', 8, true );\n\n        let moustaki2 = this.add.sprite( 1060, 475, 'moustaki2', 0 );\n        ( <BombernedGame>this.game ).addSpriteAnimation( moustaki2, 'player.wait', 1 );\n        moustaki2.play( 'player.wait', 8, true );\n\n        const menu = new Menu( this.game );\n\n        let playerOptions = [\n            new MenuSelectOption<ControllerType>( ControllerType.NONE, 'None' ),\n            new MenuSelectOption<ControllerType>( ControllerType.CPU, 'CPU' ),\n            new MenuSelectOption<ControllerType>( ControllerType.KEYBOARD_AND_MOUSE, 'Keyboard & mouse' ),\n            new MenuSelectOption<ControllerType>( ControllerType.PAD1, 'Pad 1' ),\n            new MenuSelectOption<ControllerType>( ControllerType.PAD2, 'Pad 2' ),\n            new MenuSelectOption<ControllerType>( ControllerType.PAD3, 'Pad 3' ),\n            new MenuSelectOption<ControllerType>( ControllerType.PAD4, 'Pad 4' )\n        ];\n\n        this.nedSelect = menu.select( 200, 150, playerOptions );\n        this.ned2Select = menu.select( 200, 250, playerOptions );\n        this.moustakiSelect = menu.select( 200, 350, playerOptions );\n        this.moustaki2Select = menu.select( 200, 450, playerOptions );\n\n        this.autoSelect();\n        menu.button( \"Play\", 200, 600, () => {\n            let config = new LevelConfig();\n            config.nedController = this.nedSelect.getSelectedValue();\n            config.ned2Controller = this.ned2Select.getSelectedValue();\n            config.moustakiController = this.moustakiSelect.getSelectedValue();\n            config.moustaki2Controller = this.moustaki2Select.getSelectedValue();\n            this.game.state.start( 'Level', true, false, config )\n        } );\n\n        this.input.gamepad.onConnectCallback = this.input.gamepad.onDisconnectCallback = () => this.autoSelect();\n    }\n\n    shutdown() {\n        this.input.gamepad.onConnectCallback = this.input.gamepad.onDisconnectCallback = null;\n    }\n\n    autoSelect() {\n        switch ( this.input.gamepad.padsConnected ) {\n            case 0:\n                this.nedSelect.setSelectedValue( ControllerType.KEYBOARD_AND_MOUSE );\n                this.ned2Select.setSelectedValue( ControllerType.CPU );\n                this.moustakiSelect.setSelectedValue( ControllerType.CPU );\n                this.moustaki2Select.setSelectedValue( ControllerType.CPU );\n                break;\n            case 1:\n                this.nedSelect.setSelectedValue( ControllerType.PAD1 );\n                this.ned2Select.setSelectedValue( ControllerType.CPU );\n                this.moustakiSelect.setSelectedValue( ControllerType.CPU );\n                this.moustaki2Select.setSelectedValue( ControllerType.CPU );\n                break;\n            case 2:\n                this.nedSelect.setSelectedValue( ControllerType.PAD1 );\n                this.ned2Select.setSelectedValue( ControllerType.CPU );\n                this.moustakiSelect.setSelectedValue( ControllerType.PAD2 );\n                this.moustaki2Select.setSelectedValue( ControllerType.CPU );\n                break;\n            case 3:\n                this.nedSelect.setSelectedValue( ControllerType.PAD1 );\n                this.ned2Select.setSelectedValue( ControllerType.PAD2 );\n                this.moustakiSelect.setSelectedValue( ControllerType.PAD3 );\n                this.moustaki2Select.setSelectedValue( ControllerType.CPU );\n                break;\n            default:\n                this.nedSelect.setSelectedValue( ControllerType.PAD1 );\n                this.ned2Select.setSelectedValue( ControllerType.PAD2 );\n                this.moustakiSelect.setSelectedValue( ControllerType.PAD3 );\n                this.moustaki2Select.setSelectedValue( ControllerType.PAD4 );\n                break;\n        }\n    }\n}\n","/// <reference path=\"../../typings/phaser.d.ts\"/>\nimport { AbstractState } from \"./AbstractState\";\nimport { Menu } from \"../ui/Menu\";\n\nexport class Title extends AbstractState {\n\n    constructor() {\n        super();\n    }\n\n    preload() {\n        this.game.load.image('school', 'title/background.jpg');\n        this.game.load.audio('main-music', 'musics/opengameart/hungry-dino-9-chiptune-tracks-10-sfx/main.mp3')\n        Menu.preload(this.game);\n    }\n\n    create() {\n        super.create();\n        this.game.sound.stopAll();\n        this.game.sound.play('main-music', 1, true);\n        this.game.add.image(0, 0, 'school');\n\n        const menu = new Menu(this.game);\n        menu.button(\"Start\", 200, 250, () => this.game.state.start('TeamSelectScreen'));\n        menu.button(\"Options\", 200, 400, () => this.game.state.start('Options'));\n        menu.button(\"Help\", 200, 550, () => this.game.state.start('Help1'));\n    }\n}\n","/// <reference path=\"../../typings/phaser.d.ts\"/>\r\n\r\nimport { MenuCursor } from \"./MenuCursor\";\r\nimport { MenuButton } from \"./MenuButton\";\r\nimport { MenuSelect, MenuSelectOption } from \"./MenuSelect\";\r\n\r\nexport class Menu extends Phaser.Group {\r\n    buttons: Phaser.Group;\r\n    menuCursor: MenuCursor;\r\n\r\n    constructor(game: Phaser.Game) {\r\n        super(game);\r\n        this.buttons = game.add.group();\r\n        this.add(this.buttons);\r\n        this.menuCursor = new MenuCursor(game, this.buttons);\r\n        this.add(this.menuCursor);\r\n        game.add.existing(this);\r\n    }\r\n\r\n    disableGamepadCursor(): Menu {\r\n        this.menuCursor.gamepadCursor = false;\r\n        return this;\r\n    }\r\n\r\n    disableKeyboardCursor(): Menu {\r\n        this.menuCursor.gamepadCursor = false;\r\n        return this;\r\n    }\r\n\r\n    addButton(button: MenuButton) {\r\n        this.buttons.add(button);\r\n    }\r\n\r\n    button(label: string, x: number, y: number, callback: Function) {\r\n        this.buttons.add(new MenuButton(this.game, label, x, y, callback));\r\n    }\r\n\r\n    select<T>(x: number, y: number, options: Array<MenuSelectOption<T>>): MenuSelect<T> {\r\n        const select = new MenuSelect(this.game, x, y, options);\r\n        this.buttons.add(select);\r\n        return select;\r\n    }\r\n\r\n    static preload(game: Phaser.Game) {\r\n        game.load.atlasXML('menu-buttons', 'menu/buttons.png', 'menu/buttons.xml');\r\n    }\r\n}","/// <reference path=\"../../typings/phaser.d.ts\"/>\nexport class MenuButton extends Phaser.Button{\n\n    labelText: Phaser.Text;\n    callback: Function;\n    constructor(game: Phaser.Game, label: string, x: number, y: number, callback: Function) {\n        super(game, x, y, 'menu-buttons', callback, null, 'over', 'out', 'down');\n        this.callback = callback;\n        this.labelText = new Phaser.Text(this.game, 140, 15, label, {font: \"64px monospace\", fill: 'white'});\n        this.addChild(this.labelText);\n    }\n\n    toggle() {\n        this.callback();\n    }\n\n    setText(text: string) {\n        this.labelText.setText(text);\n    }\n}","/// <reference path=\"../../typings/phaser.d.ts\"/>\r\n\r\ninterface Togglable {\r\n    toggle?: Function;\r\n}\r\n\r\nexport class MenuCursor extends Phaser.Text {\r\n    private buttons: Phaser.Group;\r\n    private currentButton = 0;\r\n    waitUntil: number = -1;\r\n    keyboardCursor = true;\r\n    gamepadCursor = true;\r\n\r\n    constructor(game: Phaser.Game, buttons: Phaser.Group) {\r\n        super(game, 0, 0, '👉', { font: \"64px monospace\", fontWeight: 'bold', fill: 'white' });\r\n        this.buttons = buttons;\r\n        this.visible = false;\r\n    }\r\n\r\n    firstPadConnected(): Phaser.SinglePad {\r\n        const gamepad = this.game.input.gamepad;\r\n        if (gamepad.pad1.connected) {\r\n            return gamepad.pad1;\r\n        } else if (gamepad.pad2.connected) {\r\n            return gamepad.pad2;\r\n        } else if (gamepad.pad3.connected) {\r\n            return gamepad.pad3;\r\n        } else if (gamepad.pad4.connected) {\r\n            return gamepad.pad4;\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    update() {\r\n        super.update();\r\n        if (this.parent.visible && this.game.time.time > this.waitUntil && (this.processPad() || this.processKeyboard())) {\r\n            this.waitUntil = this.game.time.time + 230;\r\n        }\r\n    }\r\n\r\n    processKeyboard(): boolean {\r\n        if (this.keyboardCursor) {\r\n            if (this.game.input.keyboard.isDown(Phaser.Keyboard.UP)) {\r\n                this.moveToButton(-1);\r\n                return true;\r\n            }\r\n            if (this.game.input.keyboard.isDown(Phaser.Keyboard.DOWN)) {\r\n                this.moveToButton(1);\r\n                return true;\r\n            }\r\n            if (this.game.input.keyboard.isDown(Phaser.Keyboard.ENTER)) {\r\n                this.activateButton();\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    processPad(): boolean {\r\n        if (this.gamepadCursor) {\r\n            const pad = this.firstPadConnected();\r\n            if (pad) {\r\n                for (let b = 0; b < 4; ++b) {\r\n                    let button = pad.getButton(b);\r\n                    if (button && button.isDown) {\r\n                        this.activateButton();\r\n                        return true;\r\n                    }\r\n                }\r\n                for (let a = 0; a < 2; ++a) {\r\n                    const axis = pad.axis(a);\r\n                    if (axis > pad.deadZone) {\r\n                        this.moveToButton(1);\r\n                        return true;\r\n                    } else if (axis < -pad.deadZone) {\r\n                        this.moveToButton(-1);\r\n                        return true;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    moveToButton(direction: number) {\r\n        if (this.parent.visible && this.buttons.children.length > 0) {\r\n            if (!this.visible) {\r\n                this.visible = true;\r\n            } else {\r\n                this.currentButton += direction;\r\n            }\r\n            if (this.currentButton >= this.buttons.length) {\r\n                this.currentButton = 0;\r\n            }\r\n            if (this.currentButton < 0) {\r\n                this.currentButton = this.buttons.length - 1;\r\n            }\r\n            const button = this.buttons.children[this.currentButton];\r\n            this.x = button.x;\r\n            this.y = button.y;\r\n        }\r\n    }\r\n    activateButton() {\r\n        if (this.parent.visible) {\r\n            if (!this.visible) {\r\n                this.moveToButton(0);\r\n            } else if (this.buttons.children.length > 0) {\r\n                const button = <Togglable>this.buttons.children[this.currentButton];\r\n                if (button.toggle) {\r\n                    button.toggle();\r\n                }\r\n            }\r\n        }\r\n    }\r\n}","/// <reference path=\"../../typings/phaser.d.ts\"/>\nexport class MenuMiniButton extends Phaser.Button {\n\n    labelText: Phaser.Text;\n    callback: Function;\n    constructor(game: Phaser.Game, label: string, x: number, y: number, callback: Function) {\n        super(game, x, y, 'menu-mini-buttons', callback, null, 'over', 'out', 'down');\n        this.callback = callback;\n        this.labelText = new Phaser.Text(this.game, 15, 15, label, { font: \"64px monospace\", fill: 'white' });\n        this.addChild(this.labelText);\n    }\n    \n    static preload(game: Phaser.Game) {\n        game.load.atlasXML('menu-mini-buttons', 'menu/mini-buttons.png', 'menu/mini-buttons.xml');\n    }\n\n    toggle() {\n        this.callback();\n    }\n\n    setText(text: string) {\n        this.labelText.setText(text);\n    }\n}","/// <reference path=\"../../typings/phaser.d.ts\"/>\n\nexport class MenuSelectOption<T> {\n    label: string;\n    value: T;\n    callback: Function;\n\n    constructor(value: T, label: string, callback?: Function) {\n        this.label = label;\n        this.value = value;\n        this.callback = callback;\n    }\n}\n\nexport class MenuSelect<T> extends Phaser.Button {\n\n    options: Array<MenuSelectOption<T>>;\n    selectedOption = 0;\n    labelText: Phaser.Text;\n    constructor(game: Phaser.Game, x: number, y: number, options: Array<MenuSelectOption<T>>) {\n        super(game, x, y, 'menu-buttons', () => this.toggle(), null, 'over', 'out', 'down');\n        this.options = options;\n        this.labelText = new Phaser.Text(this.game, 140, 15, options[0].label, { font: \"64px monospace\", fill: 'white' });\n        this.addChild(this.labelText);\n        game.add.existing(this);\n    }\n\n    toggle() {\n        this.selectedOption = (this.selectedOption + 1) % this.options.length;\n        this.labelText.setText(this.options[this.selectedOption].label);\n    }\n\n    getSelectedValue(): T {\n        return this.options[this.selectedOption].value;\n    }\n\n    setSelectedValue(optionValue: T) {\n        let foundIndex = this.options.findIndex((option: MenuSelectOption<T>) => option.value === optionValue);\n        this.selectedOption = foundIndex >= 0 ? foundIndex : 0;\n        this.labelText.setText(this.options[this.selectedOption].label);\n    }\n\n}","/// <reference path=\"../../typings/phaser.d.ts\"/>\n\nimport { GamepadUtils } from \"./GamepadUtils\";\n\nexport enum ControllerType {\n\tNONE = -2,\n\tCPU = -1,\n\tKEYBOARD_AND_MOUSE = 0,\n\tPAD1 = 1,\n\tPAD2 = 2,\n\tPAD3 = 3,\n\tPAD4 = 4\n}\n\nexport class Controllers {\n\tcontrollers: Array<AbstractControls>;\n\n\tconstructor(game: Phaser.Game) {\n\t\tgame.input.gamepad.start();\n\t\tthis.controllers = [\n\t\t\tnew KeyboardAndMouseControls(game),\n\t\t\tnew PadControls(game, 1),\n\t\t\tnew PadControls(game, 2),\n\t\t\tnew PadControls(game, 3),\n\t\t\tnew PadControls(game, 4),\n\t\t];\n\t}\n\n\tgetController(type: ControllerType): AbstractControls {\n\t\tswitch (type) {\n\t\t\tcase ControllerType.NONE:\n\t\t\t\treturn null;\n\t\t\tcase ControllerType.CPU:\n\t\t\t\treturn new CPUControls();\n\t\t\tdefault:\n\t\t\t\treturn this.controllers[type];\n\t\t}\n\t}\n\n\tgetKeyboardAndMouse(): KeyboardAndMouseControls {\n\t\treturn this.controllers[0] as KeyboardAndMouseControls;\n\t}\n\n\tgetPad(padIndex: number): PadControls {\n\t\treturn this.controllers[padIndex] as PadControls;\n\t}\n\n\tupdatePadLayout() {\n\t\tfor (let i = 1; i < 4; ++i) {\n\t\t\t(<PadControls>this.controllers[i]).updatePadLayout();\n\t\t}\n\t}\n}\n\nexport abstract class AbstractControls {\n\n\tabstract isGoingUp(): boolean;\n\tabstract isGoingDown(): boolean;\n\tabstract isGoingLeft(): boolean;\n\tabstract isGoingRight(): boolean;\n\tabstract isDroppingBomb(): boolean;\n\tabstract isMenuAsked(): boolean;\n\tabstract isShooting(): boolean;\n\tabstract aimingAngle(playerPos: Phaser.Point): number;\n}\n\nexport class CPUControls extends AbstractControls {\n\n\tgoingUp: boolean = false;\n\tgoingDown: boolean = false;\n\tgoingLeft: boolean = false;\n\tgoingRight: boolean = false;\n\tdroppingBomb: boolean = false;\n\taimAngle: number = null;\n\tshooting: boolean = false;\n\n\treset() {\n\t\tthis.goingUp = false;\n\t\tthis.goingDown = false;\n\t\tthis.goingLeft = false;\n\t\tthis.goingRight = false;\n\t\tthis.droppingBomb = false;\n\t\tthis.aimAngle = null;\n\t\tthis.shooting = false;\n\t}\n\n\tisGoingUp(): boolean {\n\t\treturn this.goingUp;\n\t}\n\tisGoingDown(): boolean {\n\t\treturn this.goingDown;\n\t}\n\tisGoingLeft(): boolean {\n\t\treturn this.goingLeft;\n\t}\n\tisGoingRight(): boolean {\n\t\treturn this.goingRight;\n\t}\n\tisDroppingBomb(): boolean {\n\t\treturn this.droppingBomb;\n\t}\n\taimingAngle(playerPos: Phaser.Point): number {\n\t\treturn this.aimAngle;\n\t}\n\tisShooting(): boolean {\n\t\treturn this.shooting;\n\t}\n\tisMenuAsked(): boolean {\n\t\treturn false;\n\t}\n}\n\nexport interface KeyboardControlsMapping {\n\tmoveUp?: number;\n\tmoveDown?: number;\n\tmoveLeft?: number;\n\tmoveRight?: number;\n\tmenu?: number;\n}\n\nexport class KeyboardAndMouseControls extends AbstractControls {\n\tkb: Phaser.Keyboard;\n\tgame: Phaser.Game;\n\tkeyCodeMoveUp: number;\n\tkeyCodeMoveDown: number;\n\tkeyCodeMoveLeft: number;\n\tkeyCodeMoveRight: number;\n\tkeyCodeMenu: number;\n    bombMouseButton: string;\n    shootMouseButton: string;\n\n\tconstructor(game: Phaser.Game) {\n\t\tsuper();\n\t\tthis.game = game;\n\t\tthis.setupKeyboardLayout();\n\t\tthis.setupMouseLayout();\n\t}\n\t\n\tsetupMouseLayout() {\n\t    this.bombMouseButton = localStorage.getItem('bomberned.mouse.bomb') || 'LB';\n\t    this.shootMouseButton = localStorage.getItem('bomberned.mouse.shoot') || 'RB';\n\t}\n\n\tsetupKeyboardLayout() {\n\t\tconst layout = localStorage.getItem('bomberned.keyboard.layout');\n\t\tthis.kb = this.game.input.keyboard;\n\t\ttry {\n\t\t\tlet mapping: KeyboardControlsMapping = JSON.parse(layout) || {};\n\t\t\tthis.keyCodeMoveUp = mapping.moveUp || Phaser.KeyCode.UP;\n\t\t\tthis.keyCodeMoveDown = mapping.moveDown || Phaser.KeyCode.DOWN;\n\t\t\tthis.keyCodeMoveLeft = mapping.moveLeft || Phaser.KeyCode.LEFT;\n\t\t\tthis.keyCodeMoveRight = mapping.moveRight || Phaser.KeyCode.RIGHT;\n\t\t\tthis.keyCodeMenu = mapping.menu || Phaser.KeyCode.ESC;\n\t\t\treturn;\n\t\t} catch (e) {\n\t\t}\n\t\tif (layout == 'azerty') {\n\t\t\tthis.useAzertyLayout();\n\t\t} else if (layout == 'qwerty') {\n\t\t\tthis.useQwertyLayout();\n\t\t} else {\n\t\t\tthis.useOtherKeyboardLayout();\n\t\t}\n\t}\n\n\tprivate useAzertyLayout() {\n\t\tthis.keyCodeMoveUp = Phaser.KeyCode.Z;\n\t\tthis.keyCodeMoveDown = Phaser.KeyCode.S;\n\t\tthis.keyCodeMoveLeft = Phaser.KeyCode.Q;\n\t\tthis.keyCodeMoveRight = Phaser.KeyCode.D;\n\t\tthis.keyCodeMenu = Phaser.KeyCode.ESC;\n\t}\n\n\tprivate useQwertyLayout() {\n\t\tthis.keyCodeMoveUp = Phaser.KeyCode.W;\n\t\tthis.keyCodeMoveDown = Phaser.KeyCode.S;\n\t\tthis.keyCodeMoveLeft = Phaser.KeyCode.A;\n\t\tthis.keyCodeMoveRight = Phaser.KeyCode.D;\n\t\tthis.keyCodeMenu = Phaser.KeyCode.ESC;\n\t}\n\n\tprivate useOtherKeyboardLayout() {\n\t\tthis.keyCodeMoveUp = Phaser.KeyCode.UP;\n\t\tthis.keyCodeMoveDown = Phaser.KeyCode.DOWN;\n\t\tthis.keyCodeMoveLeft = Phaser.KeyCode.LEFT;\n\t\tthis.keyCodeMoveRight = Phaser.KeyCode.RIGHT;\n\t\tthis.keyCodeMenu = Phaser.KeyCode.ESC;\n\t}\n\n\tisShooting(): boolean {\n\t\treturn this.isMouseButtonDown(this.shootMouseButton);\n\t}\n\n\taimingAngle(playerPos: Phaser.Point): number {\n\t\tconst pointer = this.game.input.activePointer;\n\t\treturn Phaser.Math.angleBetween(playerPos.x, playerPos.y, pointer.worldX, pointer.worldY);\n\t}\n\n\tisGoingUp(): boolean {\n\t\treturn this.kb && this.kb.isDown(this.keyCodeMoveUp);\n\t}\n\tisGoingDown(): boolean {\n\t\treturn this.kb && this.kb.isDown(this.keyCodeMoveDown);\n\t}\n\n\tisGoingLeft(): boolean {\n\t\treturn this.kb && this.kb.isDown(this.keyCodeMoveLeft);\n\t}\n\n\tisGoingRight(): boolean {\n\t\treturn this.kb && this.kb.isDown(this.keyCodeMoveRight);\n\t}\n\n\tisDroppingBomb(): boolean {\n\t    return this.isMouseButtonDown(this.bombMouseButton);\n\t}\n\n\tisMenuAsked(): boolean {\n\t\treturn this.kb && this.kb.isDown(this.keyCodeMenu);\n\t}\n\t\n\tprivate isMouseButtonDown(button: string): boolean {\n\t    switch(button) {\n\t    case 'LB':\n\t        return this.game.input.activePointer.leftButton.isDown;\n        case 'RB':\n            return this.game.input.activePointer.rightButton.isDown;\n        default:\n            return false;\n\t    }\n\t}\n\n}\n\nexport interface PadControlsMapping {\n\tmoveXAxis?: number;\n\tmoveYAxis?: number;\n\taimXAxis?: number;\n\taimYAxis?: number;\n\tshootButton?: number;\n\tmenuButton?: number;\n\tdroppingBombButton?: number;\n}\n\nexport class PadControls extends AbstractControls {\n\tpadIndex: number;\n\tprivate pad: Phaser.SinglePad;\n\tprivate game: Phaser.Game;\n\tprivate moveXAxis: number;\n\tprivate moveYAxis: number;\n\tprivate aimXAxis: number;\n\tprivate aimYAxis: number;\n\tprivate shootButton: number;\n\tprivate menuButton: number;\n\tprivate droppingBombButton: number;\n\n\tconstructor(game: Phaser.Game, padIndex: number) {\n\t\tsuper();\n\t\tthis.game = game;\n\t\tthis.padIndex = padIndex;\n\t}\n\n\tupdatePadLayout() {\n\t\tthis.pad = null;\n\t}\n\n\tprivate checkPad(): boolean {\n\t\tlet pad = GamepadUtils.gamepadByIndex(this.game, this.padIndex);\n\t\tif (pad != null) {\n\t\t\tif (this.pad != pad) {\n\t\t\t\tthis.pad = pad;\n\t\t\t\tlet layout: PadControlsMapping = {};\n\t\t\t\ttry {\n\t\t\t\t\tlayout = JSON.parse(localStorage.getItem('bomberned.gamepad.' + GamepadUtils.gamepadId(this.pad) + '.layout')) || {};\n\t\t\t\t} catch (e) {\n\t\t\t\t\tlayout = {};\n\t\t\t\t}\n\t\t\t\tthis.moveXAxis = layout.moveXAxis || Phaser.Gamepad.XBOX360_STICK_LEFT_X;\n\t\t\t\tthis.moveYAxis = layout.moveYAxis || Phaser.Gamepad.XBOX360_STICK_LEFT_Y;\n\t\t\t\tthis.aimXAxis = layout.aimXAxis || Phaser.Gamepad.XBOX360_STICK_RIGHT_X;\n\t\t\t\tthis.aimYAxis = layout.aimYAxis || Phaser.Gamepad.XBOX360_STICK_RIGHT_Y;\n\t\t\t\tthis.shootButton = layout.shootButton || Phaser.Gamepad.XBOX360_RIGHT_BUMPER;\n\t\t\t\tthis.menuButton = layout.menuButton || Phaser.Gamepad.XBOX360_START;\n\t\t\t\tthis.droppingBombButton = layout.droppingBombButton || Phaser.Gamepad.XBOX360_LEFT_BUMPER;\n\t\t\t}\n\t\t\treturn true;\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\tisShooting(): boolean {\n\t\treturn this.checkPad() && this.pad.isDown(this.shootButton);\n\t}\n\n\taimingAngle(playerPos: Phaser.Point): number {\n\t\treturn this.checkPad() && this.aimingAngleFromPad();\n\t}\n\n\tprivate aimingAngleFromPad(): number {\n\t\tlet dx = this.pad.axis(this.aimXAxis);\n\t\tlet dy = this.pad.axis(this.aimYAxis);\n\t\tdx = Math.abs(dx) <= this.pad.deadZone ? 0 : dx;\n\t\tdy = Math.abs(dy) <= this.pad.deadZone ? 0 : dy;\n\t\tif (dx != 0 || dy != 0) {\n\t\t\treturn Phaser.Math.angleBetween(0, 0, dx, dy);\n\t\t} else {\n\t\t\treturn null;\n\t\t}\n\t}\n\n\tisGoingUp(): boolean {\n\t\treturn this.checkPad() && this.pad.axis(this.moveYAxis) < -this.pad.deadZone\n\t\t\t;\n\t}\n\tisGoingDown(): boolean {\n\t\treturn this.checkPad() && this.pad.axis(this.moveYAxis) > this.pad.deadZone;\n\t}\n\n\tisGoingLeft(): boolean {\n\t\treturn this.checkPad() && this.pad.axis(this.moveXAxis) < -this.pad.deadZone;\n\t}\n\n\tisGoingRight(): boolean {\n\t\treturn this.checkPad() && this.pad.axis(this.moveXAxis) > this.pad.deadZone;\n\t}\n\n\tisDroppingBomb(): boolean {\n\t\treturn this.checkPad() && this.pad.isDown(this.droppingBombButton);\n\t}\n\n\tisMenuAsked(): boolean {\n\t\treturn this.checkPad() && this.pad.isDown(this.menuButton);\n\t}\n\n}","/// <reference path=\"../../typings/phaser.d.ts\"/>\nimport { Arrow } from \"../entities/Arrow\";\n\nexport class DamageResolver {\n    game: Phaser.Game;\n\n    constructor( game: Phaser.Game ) {\n        this.game = game;\n    }\n\n    arrowsVersusGroup( arrows: Phaser.Group, groupB: Phaser.Group ) {\n        for ( let arrow of arrows.children ) {\n            if ( arrow instanceof Arrow ) {\n                this.arrowVersusGroup( arrow.arrowCharge, groupB );\n            }\n        }\n    }\n\n    arrowVersusGroup( spriteA: Phaser.Sprite, groupB: Phaser.Group ) {\n        if ( spriteA.exists ) {\n            for ( let spriteB of groupB.children ) {\n                if ( spriteB instanceof Phaser.Sprite ) {\n                    this.arrowVersusSprite( spriteA, spriteB );\n                }\n            }\n        }\n    }\n\n    arrowVersusSprite( spriteA: Phaser.Sprite, spriteB: Phaser.Sprite ) {\n        if ( this.checkArrowCollision( spriteA, spriteB ) ) {\n            this.onCollide( spriteA, spriteB );\n        }\n    }\n\n    checkArrowCollision( spriteA: Phaser.Sprite, spriteB: Phaser.Sprite ) {\n        let arrowChargeBound = spriteA.getBounds();\n        let arrowChargeX = arrowChargeBound.x + arrowChargeBound.width / 2;\n        let arrowChargeY = arrowChargeBound.y + arrowChargeBound.height / 2;\n        return spriteA.exists && spriteB.exists && spriteB.getBounds().contains(arrowChargeX, arrowChargeY);\n    }\n\n\n    groupVersusGroup( groupA: Phaser.Group, groupB: Phaser.Group ) {\n        for ( let spriteA of groupA.children ) {\n            if ( spriteA instanceof Phaser.Sprite ) {\n                this.spriteVersusGroup( spriteA, groupB );\n            }\n        }\n    }\n\n    spriteVersusGroup( spriteA: Phaser.Sprite, groupB: Phaser.Group ) {\n        if ( spriteA.exists ) {\n            for ( let spriteB of groupB.children ) {\n                if ( spriteB instanceof Phaser.Sprite ) {\n                    this.spriteVersusSprite( spriteA, spriteB );\n                }\n            }\n        }\n    }\n\n    spriteVersusSprite( spriteA: Phaser.Sprite, spriteB: Phaser.Sprite ) {\n        if ( this.checkCollision( spriteA, spriteB ) ) {\n            this.onCollide( spriteA, spriteB );\n        }\n    }\n\n    checkCollision( spriteA: Phaser.Sprite, spriteB: Phaser.Sprite ) {\n        return spriteA.exists && spriteB.exists && spriteA.overlap( spriteB );\n    }\n\n    onCollide( a: Phaser.Sprite, b: Phaser.Sprite ) {\n        if ( !b.data.friends || !b.data.friends.includes( a.name ) ) {\n            a.damage( 1 );\n        }\n        if ( !a.data.friends || !a.data.friends.includes( b.name ) ) {\n            b.damage( 1 );\n        }\n    }\n}","/// <reference path=\"../../typings/phaser.d.ts\"/>\nexport class GamepadUtils {\n    static NB_BUTTONS = 16;\n    static NB_AXIS = 10;\n\n    static gamepadColor(pad: Phaser.SinglePad): number {\n        let gamepad = pad.game.input.gamepad;\n        if (pad == gamepad.pad4) {\n            return 0xFFFF00;\n        } else if (pad == gamepad.pad3) {\n            return 0x0000FF;\n        } else if (pad == gamepad.pad2) {\n            return 0x00FF00;\n        } else {\n            return 0xFF0000;\n        }\n    }\n    static gamepadId(pad: Phaser.SinglePad): string {\n        let anyPad = <any>pad;\n        if (anyPad._rawPad) {\n            return anyPad._rawPad.id;\n        } else {\n            return null;\n        }\n    }\n\n    static gamepadByIndex(game: Phaser.Game, padIndex : number): Phaser.SinglePad {\n        return game.input.gamepad['pad' + padIndex];\n    }\n}"]}